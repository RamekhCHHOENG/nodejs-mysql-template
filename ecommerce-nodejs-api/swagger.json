{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ONEKH-ONLINESHOP",
    "description": "API stands for Application Programming Interface. In the context of APIs, the word Application refers to any software with a distinct function. Interface can be thought of as a contract of service between two applications. This contract defines how the two communicate with each other using requests and responses. Their API documentation contains information on how developers are to structure those requests and responses.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Customers",
      "description": "API for customers in the system"
    }
  ],
  "paths": {
    "/api/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get all customers in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a new customer in system",
        "parameters": [
          {
            "name": "Add user",
            "in": "body",
            "description": "To create a new customer in system",
            "schema": {
              "$ref": "#/definitions/CustomerRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": "true",
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "summary": "Get all customers in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": "true",
            "schema": {
              "type": "integer",
              "example": "123"
            }
          },
          {
            "name": "Update user",
            "in": "body",
            "description": "To update an existing customer in system",
            "schema": {
              "$ref": "#/definitions/CustomerRequest"
            }
          }
        ],
        "summary": "Update an existing customer in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": "true",
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "summary": "Delete a customer in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "The customer has id: {id} has been remove from system."
            }
          }
        }
      }
    },
    "/api/customers/{id}/enable": {
      "patch": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": "true",
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "summary": "Enable a disabled customer in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "The customer has id: {id} has been enable in system."
            }
          }
        }
      }
    },
    "/api/customers/{id}/disable": {
      "patch": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": "true",
            "schema": {
              "type": "integer",
              "example": "123"
            }
          }
        ],
        "summary": "Disable an enabled customer in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "The customer has id: {id} has been disable in system."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerResponse": {
      "required": [],
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string",
          "example": "Chamrong"
        },
        "lastName": {
          "type": "string",
          "example": "Thor"
        },
        "gender": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1,
          "note": "0: Female 1: Male",
          "pattern": "^[10]{1}$"
        },
        "dob": {
          "type": "date",
          "format": "date",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2019-05-17"
        },
        "tel": {
          "type": "string",
          "pattern": "^[0-9+]{10,16}$",
          "example": "097245799"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "meas.pech@onekh.info"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "CustomerRequest": {
      "required": [],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Chamrong"
        },
        "lastName": {
          "type": "string",
          "example": "Thor"
        },
        "gender": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1,
          "note": "0: Female 1: Male",
          "pattern": "^[10]{1}$"
        },
        "dob": {
          "type": "date",
          "format": "date",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2019-05-17"
        },
        "tel": {
          "type": "string",
          "pattern": "^[0-9+]{10,16}$",
          "example": "097245799"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "meas.pech@onekh.info"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}